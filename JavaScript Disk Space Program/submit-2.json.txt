{
  "success": true,
  "score": 37,
  "maxPossibleScore": 37,
  "timestamp": 1612565465829,
  "tests": {
    "counts": {
      "failed": 0,
      "passed": 50,
      "total": 50
    },
    "results": [
      {
        "name": ": 1.  Create index.js.",
        "status": "passed",
        "points": 1
      },
      {
        "name": "Implementation Details: 2.  Use the console object to start a timer.",
        "status": "passed",
        "points": 1
      },
      {
        "name": "Implementation Details: 3.  Read in the contents of words.txt using fs.readFileSync.",
        "status": "passed",
        "points": 1
      },
      {
        "name": "Implementation Details: 4.  Extract all the words into an array using regEx.",
        "status": "passed",
        "points": 2
      },
      {
        "name": "Implementation Details: 5.  Use map with lambda to lowercase the words.",
        "status": "passed",
        "points": 2
      },
      {
        "name": "Implementation Details: 8.  Use filter with lambda to remove all words of size less than 4.",
        "status": "passed",
        "points": 2
      },
      {
        "name": "Implementation Details: 9.  Use another filter with lambda to remove all words of size greater than 20.",
        "status": "passed",
        "points": 2
      },
      {
        "name": "Implementation Details: 10. Use reduce with lambda to put each word in a js array of arrays called words.",
        "status": "passed",
        "points": 2
      },
      {
        "name": "Implementation Details: 11. Alphabetically sort each subarray.",
        "status": "passed",
        "points": 2
      },
      {
        "name": "Implementation Details: 12. Write out to file words.json.",
        "status": "passed",
        "points": 1
      },
      {
        "name": "Implementation Details: 13. Use the console object to stop the timer and print out the time.",
        "status": "passed",
        "points": 1
      },
      {
        "name": "Lab Output \"words.json\": Contains Correct Number of Arrays",
        "status": "passed",
        "points": 1
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 0 letter words contains 0 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 1 letter words contains 0 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 2 letter words contains 0 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 3 letter words contains 0 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 4 letter words contains 2544 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 5 letter words contains 5117 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 6 letter words contains 8297 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 7 letter words contains 11569 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 8 letter words contains 12678 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 9 letter words contains 11761 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 10 letter words contains 9890 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 11 letter words contains 7358 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 12 letter words contains 5065 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 13 letter words contains 3036 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 14 letter words contains 1690 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 15 letter words contains 945 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 16 letter words contains 450 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 17 letter words contains 233 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 18 letter words contains 83 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 19 letter words contains 43 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Arrays Contain Correct Number of Words: 20 letter words contains 9 words",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 4 letter words at index 2173 is team",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 5 letter words at index 86 is algae",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 6 letter words at index 6498 is shunts",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 7 letter words at index 6273 is mingles",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 8 letter words at index 2552 is crawlies",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 9 letter words at index 4962 is homestead",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 10 letter words at index 2167 is deactivate",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 11 letter words at index 5863 is sauerkrauts",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 12 letter words at index 1808 is flatteringly",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 13 letter words at index 597 is criminologist",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 14 letter words at index 892 is molecularities",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 15 letter words at index 105 is colorfastnesses",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 16 letter words at index 389 is superintendences",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 17 letter words at index 168 is opportunistically",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 18 letter words at index 41 is individualizations",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 19 letter words at index 2 is argumentativenesses",
        "status": "passed",
        "points": 0.5
      },
      {
        "name": "Lab Output \"words.json\" > Sample Word Checks: 20 letter words at index 3 is departmentalizations",
        "status": "passed",
        "points": 0.5
      }
    ]
  },
  "sources": [
    {
      "file": "index.js",
      "contents": "const fs = require('fs')\r\n\r\nconst toJson = (obj) => JSON.stringify(obj, null, 2);\r\nfunction writeJson(obj, filename) {\r\n    fs.writeFileSync(filename, toJson(obj));\r\n}\r\n\r\nconsole.time('mainTimer')\r\nlet fileString = (fs.readFileSync('./words.txt', 'utf-8'))\r\n\r\nconst wordRegex = /[a-z]+/gi\r\nlet wordArray = fileString.match(wordRegex)\r\nwordArray = wordArray.map(word => word.toLowerCase())\r\n\r\nconst wordSet = new Set(wordArray)\r\nwordArray = [...wordSet]\r\nwordArray = wordArray.filter(word => word.length >= 4)\r\nwordArray = wordArray.filter(word => word.length <= 20)\r\n\r\nconst words = wordArray.reduce((acc, word) => {\r\n    acc[word.length].push(word)\r\n    return acc\r\n}, [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []])\r\n\r\nwords.forEach(arr => arr = arr.sort())\r\n\r\nwriteJson(words, 'words.json')\r\nconsole.timeEnd('mainTimer')\r\n"
    }
  ]
}